syntax = "proto3";

package api;
import "google/api/annotations.proto";
import "include/graphql.proto";
//import "include/pagination.proto";
option go_package = "./api";

message VoteByHeightRequest {
  repeated string address = 1; // voter address list
  uint64 height = 2; // block height
}

message VoteByHeightResponse {
  uint64 height = 1; // block height
  repeated string stakeAmount  = 2; // stake amount list
  repeated string voteWeight  = 3; // vote weight list
}

message CandidateVoteByHeightRequest {
  repeated string address = 1;
  uint64 height = 2;
}

message CandidateVoteByHeightResponse {
  uint64 height = 1;
  repeated string stakeAmount  = 2;
  repeated string voteWeight  = 3;
  repeated string address = 4;
}

service StakingService {
  // Get the stake amount and voting weight of the voter's specified height
  rpc VoteByHeight(VoteByHeightRequest) returns (VoteByHeightResponse) {
    option (graphql.schema) = {
      type: QUERY 
      name: "VoteByHeight"
    };
    option (google.api.http) = {
      post: "/api.StakingService.VoteByHeight"
      body: "*"
    };
  };
  rpc CandidateVoteByHeight(CandidateVoteByHeightRequest) returns (CandidateVoteByHeightResponse) {
    option (graphql.schema) = {
      type: QUERY 
      name: "CandidateVoteByHeight"
    };
    option (google.api.http) = {
      post: "/api.StakingService.CandidateVoteByHeight"
      body: "*"
    };
  };
}