syntax = "proto3";

package api;
import "google/api/annotations.proto";
import "include/graphql.proto";
// import "include/pagination.proto";
option go_package = "./api";

message ChainRequest {

}

message VotingResultMeta {
    uint64 totalCandidates = 1;
    string totalWeightedVotes = 2;
    string votedTokens = 3;
}

message ChainResponse {
    uint64 mostRecentEpoch = 1; // most recent epoch
    uint64 mostRecentBlockHeight = 2; // most recent block height
    string totalSupply = 3;
    string totalCirculatingSupply = 4;
    string totalCirculatingSupplyNoRewardPool = 5;
    VotingResultMeta votingResultMeta = 6;
}

service ChainService {
  rpc Chain(ChainRequest) returns (ChainResponse) {
    option (graphql.schema) = {
      type: QUERY   // declare as Query
      name: "Chain" // query name
    };
    option (google.api.http) = {
      post: "/api.ChainService.Chain"
      body: "*"
    };
  };
}