syntax = "proto3";

package api;
import "google/api/annotations.proto";
import "include/graphql.proto";
option go_package = "./api";

message AccountRequest {
  repeated string address = 1;
  uint64 height = 2;
}

message AccountResponse {
  uint64 height = 1;
  string contract_address = 2;
  repeated string balance  = 3;
}

message AccountErc20TokenRequest {
  repeated string address = 1;
  uint64 height = 2;
  string contract_address = 3;
}

message HermesRequest {
  uint64 startEpoch = 1;
  uint64 epochCount = 2;
  string rewardAddress = 3;
}

message RewardDistribution {
  string voterEthAddress = 1;
  string voterIotexAddress = 2;
  string amount = 3;
}

message HermesDistribution {
  string delegateName = 1;
  repeated RewardDistribution rewardDistribution = 2;
  string stakingIotexAddress = 3;
  uint64 voterCount = 4;
  bool waiveServiceFee = 5;
  string refund = 6;
}

message HermesResponse {
  repeated HermesDistribution hermesDistribution = 1;
}

service AccountService {
  rpc GetIotexBalanceByHeight(AccountRequest) returns (AccountResponse) {
    option (google.api.http) = {
      post: "/api.AccountService.GetIotexBalanceByHeight"
      body: "*"
    };
  };
  rpc GetErc20TokenBalanceByHeight(AccountErc20TokenRequest) returns (AccountResponse) {
    option (google.api.http) = {
      post: "/api.AccountService.GetErc20TokenBalanceByHeight"
      body: "*"
    };
  };
  rpc Hermes(HermesRequest) returns (HermesResponse) {
    option (graphql.schema) = {
      type: QUERY   // declare as Query
      name: "Hermes" // query name
    };
    option (google.api.http) = {
      post: "/api.AccountService.Hermes"
      body: "*"
    };
  };
}