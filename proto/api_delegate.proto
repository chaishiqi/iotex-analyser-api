syntax = "proto3";

package api;
import "google/api/annotations.proto";
import "include/graphql.proto";
import "include/pagination.proto";
option go_package = "./api";

message DelegateRequest {
  uint64 startEpoch = 1;
  uint64 epochCount = 2;
  string delegateName =3;
  pagination.Pagination pagination = 4;
  uint64 percentage = 5;
  bool includeBlockReward = 6;
  bool includeFoundationBonus = 7;
}

message BucketInfo {
  string voterEthAddress = 1;
	string voterIotexAddress = 2;
	bool isNative = 3;
	string votes = 4;
	string weightedVotes = 5;
	string remainingDuration = 6;
	string startTime = 7;
	bool decay = 8;
  uint64 bucketID = 9;
}

message BucketInfoList {
  uint64 epochNumber = 1;
	uint64 count = 2;
  repeated BucketInfo  bucketInfo = 3;
}

message DelegateRewardDistribution {
  string voterEthAddress = 1;
  string voterIotexAddress = 2;
  string amount = 3;
}

message DelegateResponse {
  bool exist = 1;
  uint64 count = 2;   
	repeated BucketInfoList  bucketInfoList = 3;
  repeated DelegateRewardDistribution rewardDistribution = 4;
}

service DelegateService {
  rpc BucketInfo(DelegateRequest) returns (DelegateResponse) {
    option (graphql.schema) = {
      type: QUERY
      name: "BucketInfo"
    };
    option (google.api.http) = {
      post: "/api.DelegateService.BucketInfo"
      body: "*"
    };
  };
  rpc BookKeeping(DelegateRequest) returns (DelegateResponse) {
    option (graphql.schema) = {
      type: QUERY
      name: "BookKeeping"
    };
    option (google.api.http) = {
      post: "/api.DelegateService.BookKeeping"
      body: "*"
    };
  };
}