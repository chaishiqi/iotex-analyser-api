// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: api_hermes.proto

package api

import (
	pagination "github.com/iotexproject/iotex-analyser-api/api/pagination"
	_ "github.com/ysugimoto/grpc-graphql-gateway/graphql"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HermesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpoch    uint64 `protobuf:"varint,1,opt,name=startEpoch,proto3" json:"startEpoch,omitempty"`      // Start epoch number
	EpochCount    uint64 `protobuf:"varint,2,opt,name=epochCount,proto3" json:"epochCount,omitempty"`      // Number of epochs to query
	RewardAddress string `protobuf:"bytes,3,opt,name=rewardAddress,proto3" json:"rewardAddress,omitempty"` //Name of reward address
}

func (x *HermesRequest) Reset() {
	*x = HermesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesRequest) ProtoMessage() {}

func (x *HermesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesRequest.ProtoReflect.Descriptor instead.
func (*HermesRequest) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{0}
}

func (x *HermesRequest) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *HermesRequest) GetEpochCount() uint64 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

func (x *HermesRequest) GetRewardAddress() string {
	if x != nil {
		return x.RewardAddress
	}
	return ""
}

type RewardDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoterEthAddress   string `protobuf:"bytes,1,opt,name=voterEthAddress,proto3" json:"voterEthAddress,omitempty"`     // voter’s ERC20 address
	VoterIotexAddress string `protobuf:"bytes,2,opt,name=voterIotexAddress,proto3" json:"voterIotexAddress,omitempty"` // voter’s IoTeX address
	Amount            string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`                       // amount of reward distribution
}

func (x *RewardDistribution) Reset() {
	*x = RewardDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardDistribution) ProtoMessage() {}

func (x *RewardDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardDistribution.ProtoReflect.Descriptor instead.
func (*RewardDistribution) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{1}
}

func (x *RewardDistribution) GetVoterEthAddress() string {
	if x != nil {
		return x.VoterEthAddress
	}
	return ""
}

func (x *RewardDistribution) GetVoterIotexAddress() string {
	if x != nil {
		return x.VoterIotexAddress
	}
	return ""
}

func (x *RewardDistribution) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type HermesDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegateName        string                `protobuf:"bytes,1,opt,name=delegateName,proto3" json:"delegateName,omitempty"` // delegate name
	RewardDistribution  []*RewardDistribution `protobuf:"bytes,2,rep,name=rewardDistribution,proto3" json:"rewardDistribution,omitempty"`
	StakingIotexAddress string                `protobuf:"bytes,3,opt,name=stakingIotexAddress,proto3" json:"stakingIotexAddress,omitempty"` // delegate IoTeX staking address
	VoterCount          uint64                `protobuf:"varint,4,opt,name=voterCount,proto3" json:"voterCount,omitempty"`                  // number of voters
	WaiveServiceFee     bool                  `protobuf:"varint,5,opt,name=waiveServiceFee,proto3" json:"waiveServiceFee,omitempty"`        // whether the delegate is qualified for waiving the service fee
	Refund              string                `protobuf:"bytes,6,opt,name=refund,proto3" json:"refund,omitempty"`                           // amount of refund
}

func (x *HermesDistribution) Reset() {
	*x = HermesDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesDistribution) ProtoMessage() {}

func (x *HermesDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesDistribution.ProtoReflect.Descriptor instead.
func (*HermesDistribution) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{2}
}

func (x *HermesDistribution) GetDelegateName() string {
	if x != nil {
		return x.DelegateName
	}
	return ""
}

func (x *HermesDistribution) GetRewardDistribution() []*RewardDistribution {
	if x != nil {
		return x.RewardDistribution
	}
	return nil
}

func (x *HermesDistribution) GetStakingIotexAddress() string {
	if x != nil {
		return x.StakingIotexAddress
	}
	return ""
}

func (x *HermesDistribution) GetVoterCount() uint64 {
	if x != nil {
		return x.VoterCount
	}
	return 0
}

func (x *HermesDistribution) GetWaiveServiceFee() bool {
	if x != nil {
		return x.WaiveServiceFee
	}
	return false
}

func (x *HermesDistribution) GetRefund() string {
	if x != nil {
		return x.Refund
	}
	return ""
}

type HermesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HermesDistribution []*HermesDistribution `protobuf:"bytes,1,rep,name=hermesDistribution,proto3" json:"hermesDistribution,omitempty"`
}

func (x *HermesResponse) Reset() {
	*x = HermesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesResponse) ProtoMessage() {}

func (x *HermesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesResponse.ProtoReflect.Descriptor instead.
func (*HermesResponse) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{3}
}

func (x *HermesResponse) GetHermesDistribution() []*HermesDistribution {
	if x != nil {
		return x.HermesDistribution
	}
	return nil
}

type HermesByVoterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpoch   uint64                 `protobuf:"varint,1,opt,name=startEpoch,proto3" json:"startEpoch,omitempty"`    // Start epoch number
	EpochCount   uint64                 `protobuf:"varint,2,opt,name=epochCount,proto3" json:"epochCount,omitempty"`    // Number of epochs to query
	VoterAddress string                 `protobuf:"bytes,3,opt,name=voterAddress,proto3" json:"voterAddress,omitempty"` // voter address
	Pagination   *pagination.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *HermesByVoterRequest) Reset() {
	*x = HermesByVoterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesByVoterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesByVoterRequest) ProtoMessage() {}

func (x *HermesByVoterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesByVoterRequest.ProtoReflect.Descriptor instead.
func (*HermesByVoterRequest) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{4}
}

func (x *HermesByVoterRequest) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *HermesByVoterRequest) GetEpochCount() uint64 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

func (x *HermesByVoterRequest) GetVoterAddress() string {
	if x != nil {
		return x.VoterAddress
	}
	return ""
}

func (x *HermesByVoterRequest) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type HermesByVoterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist               bool                              `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"` // whether the voter uses Hermes within the specified epoch range
	Delegates           []*HermesByVoterResponse_Delegate `protobuf:"bytes,2,rep,name=delegates,proto3" json:"delegates,omitempty"`
	Count               uint64                            `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`                            // total number of reward receivings
	TotalRewardReceived string                            `protobuf:"bytes,4,opt,name=totalRewardReceived,proto3" json:"totalRewardReceived,omitempty"` // total reward amount received
}

func (x *HermesByVoterResponse) Reset() {
	*x = HermesByVoterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesByVoterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesByVoterResponse) ProtoMessage() {}

func (x *HermesByVoterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesByVoterResponse.ProtoReflect.Descriptor instead.
func (*HermesByVoterResponse) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{5}
}

func (x *HermesByVoterResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *HermesByVoterResponse) GetDelegates() []*HermesByVoterResponse_Delegate {
	if x != nil {
		return x.Delegates
	}
	return nil
}

func (x *HermesByVoterResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *HermesByVoterResponse) GetTotalRewardReceived() string {
	if x != nil {
		return x.TotalRewardReceived
	}
	return ""
}

type HermesByDelegateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpoch   uint64                 `protobuf:"varint,1,opt,name=startEpoch,proto3" json:"startEpoch,omitempty"`    // Epoch number to start from
	EpochCount   uint64                 `protobuf:"varint,2,opt,name=epochCount,proto3" json:"epochCount,omitempty"`    // Number of epochs to query
	DelegateName string                 `protobuf:"bytes,3,opt,name=delegateName,proto3" json:"delegateName,omitempty"` // Name of the delegate
	Pagination   *pagination.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`     //Pagination info
}

func (x *HermesByDelegateRequest) Reset() {
	*x = HermesByDelegateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesByDelegateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesByDelegateRequest) ProtoMessage() {}

func (x *HermesByDelegateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesByDelegateRequest.ProtoReflect.Descriptor instead.
func (*HermesByDelegateRequest) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{6}
}

func (x *HermesByDelegateRequest) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *HermesByDelegateRequest) GetEpochCount() uint64 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

func (x *HermesByDelegateRequest) GetDelegateName() string {
	if x != nil {
		return x.DelegateName
	}
	return ""
}

func (x *HermesByDelegateRequest) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type HermesByDelegateVoterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoterAddress string `protobuf:"bytes,1,opt,name=voterAddress,proto3" json:"voterAddress,omitempty"` // voter address
	FromEpoch    uint64 `protobuf:"varint,2,opt,name=fromEpoch,proto3" json:"fromEpoch,omitempty"`      // starting epoch
	ToEpoch      uint64 `protobuf:"varint,3,opt,name=toEpoch,proto3" json:"toEpoch,omitempty"`          // ending epoch
	Amount       string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`             // distributino amount
	ActHash      string `protobuf:"bytes,5,opt,name=actHash,proto3" json:"actHash,omitempty"`           // action hash
	Timestamp    uint64 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`      // unix timestamp
}

func (x *HermesByDelegateVoterInfo) Reset() {
	*x = HermesByDelegateVoterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesByDelegateVoterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesByDelegateVoterInfo) ProtoMessage() {}

func (x *HermesByDelegateVoterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesByDelegateVoterInfo.ProtoReflect.Descriptor instead.
func (*HermesByDelegateVoterInfo) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{7}
}

func (x *HermesByDelegateVoterInfo) GetVoterAddress() string {
	if x != nil {
		return x.VoterAddress
	}
	return ""
}

func (x *HermesByDelegateVoterInfo) GetFromEpoch() uint64 {
	if x != nil {
		return x.FromEpoch
	}
	return 0
}

func (x *HermesByDelegateVoterInfo) GetToEpoch() uint64 {
	if x != nil {
		return x.ToEpoch
	}
	return 0
}

func (x *HermesByDelegateVoterInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *HermesByDelegateVoterInfo) GetActHash() string {
	if x != nil {
		return x.ActHash
	}
	return ""
}

func (x *HermesByDelegateVoterInfo) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type HermesByDelegateDistributionRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNumber          uint64  `protobuf:"varint,1,opt,name=epochNumber,proto3" json:"epochNumber,omitempty"`                    //epoch number
	BlockRewardRatio     float64 `protobuf:"fixed64,2,opt,name=blockRewardRatio,proto3" json:"blockRewardRatio,omitempty"`         // ratio of block reward being distributed
	EpochRewardRatio     float64 `protobuf:"fixed64,3,opt,name=epochRewardRatio,proto3" json:"epochRewardRatio,omitempty"`         // ratio of epoch reward being distributed
	FoundationBonusRatio float64 `protobuf:"fixed64,4,opt,name=foundationBonusRatio,proto3" json:"foundationBonusRatio,omitempty"` // ratio of foundation bonus being distributed
}

func (x *HermesByDelegateDistributionRatio) Reset() {
	*x = HermesByDelegateDistributionRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesByDelegateDistributionRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesByDelegateDistributionRatio) ProtoMessage() {}

func (x *HermesByDelegateDistributionRatio) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesByDelegateDistributionRatio.ProtoReflect.Descriptor instead.
func (*HermesByDelegateDistributionRatio) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{8}
}

func (x *HermesByDelegateDistributionRatio) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

func (x *HermesByDelegateDistributionRatio) GetBlockRewardRatio() float64 {
	if x != nil {
		return x.BlockRewardRatio
	}
	return 0
}

func (x *HermesByDelegateDistributionRatio) GetEpochRewardRatio() float64 {
	if x != nil {
		return x.EpochRewardRatio
	}
	return 0
}

func (x *HermesByDelegateDistributionRatio) GetFoundationBonusRatio() float64 {
	if x != nil {
		return x.FoundationBonusRatio
	}
	return 0
}

type HermesByDelegateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist                   bool                                 `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"` // whether the delegate has hermes information within the specified epoch range
	Count                   uint64                               `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // total number of reward distributions
	VoterInfoList           []*HermesByDelegateVoterInfo         `protobuf:"bytes,3,rep,name=voterInfoList,proto3" json:"voterInfoList,omitempty"`
	TotalRewardsDistributed string                               `protobuf:"bytes,4,opt,name=totalRewardsDistributed,proto3" json:"totalRewardsDistributed,omitempty"` // total reward amount distributed
	DistributionRatio       []*HermesByDelegateDistributionRatio `protobuf:"bytes,5,rep,name=distributionRatio,proto3" json:"distributionRatio,omitempty"`
}

func (x *HermesByDelegateResponse) Reset() {
	*x = HermesByDelegateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesByDelegateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesByDelegateResponse) ProtoMessage() {}

func (x *HermesByDelegateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesByDelegateResponse.ProtoReflect.Descriptor instead.
func (*HermesByDelegateResponse) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{9}
}

func (x *HermesByDelegateResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *HermesByDelegateResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *HermesByDelegateResponse) GetVoterInfoList() []*HermesByDelegateVoterInfo {
	if x != nil {
		return x.VoterInfoList
	}
	return nil
}

func (x *HermesByDelegateResponse) GetTotalRewardsDistributed() string {
	if x != nil {
		return x.TotalRewardsDistributed
	}
	return ""
}

func (x *HermesByDelegateResponse) GetDistributionRatio() []*HermesByDelegateDistributionRatio {
	if x != nil {
		return x.DistributionRatio
	}
	return nil
}

type HermesMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpoch uint64 `protobuf:"varint,1,opt,name=startEpoch,proto3" json:"startEpoch,omitempty"` // starting epoch number
	EpochCount uint64 `protobuf:"varint,2,opt,name=epochCount,proto3" json:"epochCount,omitempty"` // epoch count
}

func (x *HermesMetaRequest) Reset() {
	*x = HermesMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesMetaRequest) ProtoMessage() {}

func (x *HermesMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesMetaRequest.ProtoReflect.Descriptor instead.
func (*HermesMetaRequest) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{10}
}

func (x *HermesMetaRequest) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *HermesMetaRequest) GetEpochCount() uint64 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

type HermesMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist                  bool   `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`                                  // whether Hermes has bookkeeping information within the specified epoch range
	NumberOfDelegates      uint64 `protobuf:"varint,2,opt,name=numberOfDelegates,proto3" json:"numberOfDelegates,omitempty"`          // number of Hermes delegates within the epoch range
	NumberOfRecipients     uint64 `protobuf:"varint,3,opt,name=numberOfRecipients,proto3" json:"numberOfRecipients,omitempty"`        // number of voters who vote for Hermes delegates within the epoch range
	TotalRewardDistributed string `protobuf:"bytes,4,opt,name=totalRewardDistributed,proto3" json:"totalRewardDistributed,omitempty"` // total reward amount distributed within the epoch range
}

func (x *HermesMetaResponse) Reset() {
	*x = HermesMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesMetaResponse) ProtoMessage() {}

func (x *HermesMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesMetaResponse.ProtoReflect.Descriptor instead.
func (*HermesMetaResponse) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{11}
}

func (x *HermesMetaResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *HermesMetaResponse) GetNumberOfDelegates() uint64 {
	if x != nil {
		return x.NumberOfDelegates
	}
	return 0
}

func (x *HermesMetaResponse) GetNumberOfRecipients() uint64 {
	if x != nil {
		return x.NumberOfRecipients
	}
	return 0
}

func (x *HermesMetaResponse) GetTotalRewardDistributed() string {
	if x != nil {
		return x.TotalRewardDistributed
	}
	return ""
}

type HermesAverageStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpoch    uint64 `protobuf:"varint,1,opt,name=startEpoch,proto3" json:"startEpoch,omitempty"`      // starting epoch number
	EpochCount    uint64 `protobuf:"varint,2,opt,name=epochCount,proto3" json:"epochCount,omitempty"`      // epoch count
	RewardAddress string `protobuf:"bytes,3,opt,name=rewardAddress,proto3" json:"rewardAddress,omitempty"` //Name of reward address
}

func (x *HermesAverageStatsRequest) Reset() {
	*x = HermesAverageStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesAverageStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesAverageStatsRequest) ProtoMessage() {}

func (x *HermesAverageStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesAverageStatsRequest.ProtoReflect.Descriptor instead.
func (*HermesAverageStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{12}
}

func (x *HermesAverageStatsRequest) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *HermesAverageStatsRequest) GetEpochCount() uint64 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

func (x *HermesAverageStatsRequest) GetRewardAddress() string {
	if x != nil {
		return x.RewardAddress
	}
	return ""
}

type HermesAverageStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist           bool                                          `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"` // whether Hermes has bookkeeping information within the specified epoch range
	AveragePerEpoch []*HermesAverageStatsResponse_AveragePerEpoch `protobuf:"bytes,2,rep,name=averagePerEpoch,proto3" json:"averagePerEpoch,omitempty"`
}

func (x *HermesAverageStatsResponse) Reset() {
	*x = HermesAverageStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesAverageStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesAverageStatsResponse) ProtoMessage() {}

func (x *HermesAverageStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesAverageStatsResponse.ProtoReflect.Descriptor instead.
func (*HermesAverageStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{13}
}

func (x *HermesAverageStatsResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *HermesAverageStatsResponse) GetAveragePerEpoch() []*HermesAverageStatsResponse_AveragePerEpoch {
	if x != nil {
		return x.AveragePerEpoch
	}
	return nil
}

type HermesDropRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNumber  uint64 `protobuf:"varint,1,opt,name=epochNumber,proto3" json:"epochNumber,omitempty"`  // end epoch number
	DelegateName string `protobuf:"bytes,2,opt,name=delegateName,proto3" json:"delegateName,omitempty"` // delegate name
	VoterAddress string `protobuf:"bytes,3,opt,name=voterAddress,proto3" json:"voterAddress,omitempty"` //Name of voter address
	ActHash      string `protobuf:"bytes,4,opt,name=actHash,proto3" json:"actHash,omitempty"`           //Name of actHash
	BucketID     uint64 `protobuf:"varint,5,opt,name=bucketID,proto3" json:"bucketID,omitempty"`        //bucket ID
	Amount       string `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`             //Name of amount
}

func (x *HermesDropRecordsRequest) Reset() {
	*x = HermesDropRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesDropRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesDropRecordsRequest) ProtoMessage() {}

func (x *HermesDropRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesDropRecordsRequest.ProtoReflect.Descriptor instead.
func (*HermesDropRecordsRequest) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{14}
}

func (x *HermesDropRecordsRequest) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

func (x *HermesDropRecordsRequest) GetDelegateName() string {
	if x != nil {
		return x.DelegateName
	}
	return ""
}

func (x *HermesDropRecordsRequest) GetVoterAddress() string {
	if x != nil {
		return x.VoterAddress
	}
	return ""
}

func (x *HermesDropRecordsRequest) GetActHash() string {
	if x != nil {
		return x.ActHash
	}
	return ""
}

func (x *HermesDropRecordsRequest) GetBucketID() uint64 {
	if x != nil {
		return x.BucketID
	}
	return 0
}

func (x *HermesDropRecordsRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type HermesDropRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // whether the drop records are successfully generated
}

func (x *HermesDropRecordsResponse) Reset() {
	*x = HermesDropRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesDropRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesDropRecordsResponse) ProtoMessage() {}

func (x *HermesDropRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesDropRecordsResponse.ProtoReflect.Descriptor instead.
func (*HermesDropRecordsResponse) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{15}
}

func (x *HermesDropRecordsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type HermesByVoterResponse_Delegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegateName string `protobuf:"bytes,1,opt,name=delegateName,proto3" json:"delegateName,omitempty"` // delegate name
	FromEpoch    uint64 `protobuf:"varint,2,opt,name=fromEpoch,proto3" json:"fromEpoch,omitempty"`      // starting epoch of bookkeeping
	ToEpoch      uint64 `protobuf:"varint,3,opt,name=toEpoch,proto3" json:"toEpoch,omitempty"`          // ending epoch of bookkeeping
	Amount       string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`             // receiving amount
	ActHash      string `protobuf:"bytes,5,opt,name=actHash,proto3" json:"actHash,omitempty"`           // action hash
	Timestamp    uint64 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`      // unix timestamp
}

func (x *HermesByVoterResponse_Delegate) Reset() {
	*x = HermesByVoterResponse_Delegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesByVoterResponse_Delegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesByVoterResponse_Delegate) ProtoMessage() {}

func (x *HermesByVoterResponse_Delegate) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesByVoterResponse_Delegate.ProtoReflect.Descriptor instead.
func (*HermesByVoterResponse_Delegate) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{5, 0}
}

func (x *HermesByVoterResponse_Delegate) GetDelegateName() string {
	if x != nil {
		return x.DelegateName
	}
	return ""
}

func (x *HermesByVoterResponse_Delegate) GetFromEpoch() uint64 {
	if x != nil {
		return x.FromEpoch
	}
	return 0
}

func (x *HermesByVoterResponse_Delegate) GetToEpoch() uint64 {
	if x != nil {
		return x.ToEpoch
	}
	return 0
}

func (x *HermesByVoterResponse_Delegate) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *HermesByVoterResponse_Delegate) GetActHash() string {
	if x != nil {
		return x.ActHash
	}
	return ""
}

func (x *HermesByVoterResponse_Delegate) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type HermesAverageStatsResponse_AveragePerEpoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegateName       string `protobuf:"bytes,1,opt,name=delegateName,proto3" json:"delegateName,omitempty"`             // delegate name
	RewardDistribution string `protobuf:"bytes,2,opt,name=rewardDistribution,proto3" json:"rewardDistribution,omitempty"` // reward distribution amount on average
	TotalWeightedVotes string `protobuf:"bytes,3,opt,name=totalWeightedVotes,proto3" json:"totalWeightedVotes,omitempty"` // total weighted votes on average
}

func (x *HermesAverageStatsResponse_AveragePerEpoch) Reset() {
	*x = HermesAverageStatsResponse_AveragePerEpoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_hermes_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesAverageStatsResponse_AveragePerEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesAverageStatsResponse_AveragePerEpoch) ProtoMessage() {}

func (x *HermesAverageStatsResponse_AveragePerEpoch) ProtoReflect() protoreflect.Message {
	mi := &file_api_hermes_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesAverageStatsResponse_AveragePerEpoch.ProtoReflect.Descriptor instead.
func (*HermesAverageStatsResponse_AveragePerEpoch) Descriptor() ([]byte, []int) {
	return file_api_hermes_proto_rawDescGZIP(), []int{13, 0}
}

func (x *HermesAverageStatsResponse_AveragePerEpoch) GetDelegateName() string {
	if x != nil {
		return x.DelegateName
	}
	return ""
}

func (x *HermesAverageStatsResponse_AveragePerEpoch) GetRewardDistribution() string {
	if x != nil {
		return x.RewardDistribution
	}
	return ""
}

func (x *HermesAverageStatsResponse_AveragePerEpoch) GetTotalWeightedVotes() string {
	if x != nil {
		return x.TotalWeightedVotes
	}
	return ""
}

var File_api_hermes_proto protoreflect.FileDescriptor

var file_api_hermes_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x5f, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x2f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x0d, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x84, 0x01,
	0x0a, 0x12, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x45, 0x74, 0x68,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x6f, 0x74, 0x65, 0x78, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x6f, 0x74, 0x65, 0x72,
	0x49, 0x6f, 0x74, 0x65, 0x78, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x95, 0x02, 0x0a, 0x12, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x47, 0x0a, 0x12, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x6f, 0x74, 0x65, 0x78, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6f,
	0x74, 0x65, 0x78, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x6f,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x76, 0x6f, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x61,
	0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x61, 0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x22, 0x59, 0x0a, 0x0e,
	0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x12, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x12, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb2, 0x01, 0x0a, 0x14, 0x48, 0x65, 0x72, 0x6d,
	0x65, 0x73, 0x42, 0x79, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf1, 0x02, 0x0a,
	0x15, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x56, 0x6f,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x1a, 0xb6, 0x01, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0xb5, 0x01, 0x0a, 0x17, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc7, 0x01, 0x0a, 0x19, 0x48, 0x65, 0x72,
	0x6d, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x6f,
	0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72,
	0x6f, 0x6d, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0xd1, 0x01, 0x0a, 0x21, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x32, 0x0a, 0x14, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x14, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x22, 0x9c, 0x02, 0x0a, 0x18, 0x48, 0x65, 0x72, 0x6d, 0x65,
	0x73, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x44, 0x0a, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72,
	0x6d, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x12,
	0x54, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x52, 0x11, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x22, 0x53, 0x0a, 0x11, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x48,
	0x65, 0x72, 0x6d, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x22, 0x81, 0x01,
	0x0a, 0x19, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0xa5, 0x02, 0x0a, 0x1a, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x0f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x52, 0x0f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x1a, 0x95, 0x01, 0x0a, 0x0f, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x18, 0x48, 0x65,
	0x72, 0x6d, 0x65, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x76, 0x6f, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x35,
	0x0a, 0x19, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xb1, 0x06, 0x0a, 0x0d, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x06, 0x48, 0x65, 0x72, 0x6d, 0x65,
	0x73, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0xba, 0x43, 0x08, 0x12,
	0x06, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f,
	0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x85, 0x01, 0x0a, 0x0d,
	0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x56, 0x6f, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0xba, 0x43, 0x0f, 0x12, 0x0d, 0x48, 0x65, 0x72, 0x6d, 0x65,
	0x73, 0x42, 0x79, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20,
	0x2f, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x56, 0x6f, 0x74, 0x65, 0x72,
	0x3a, 0x01, 0x2a, 0x12, 0x94, 0x01, 0x0a, 0x10, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72,
	0x6d, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0xba, 0x43, 0x12, 0x12, 0x10, 0x48, 0x65, 0x72, 0x6d,
	0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x22, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x76, 0x0a, 0x0a, 0x48, 0x65,
	0x72, 0x6d, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x65, 0x72, 0x6d, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0xba, 0x43, 0x0c, 0x12, 0x0a,
	0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22,
	0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x3a,
	0x01, 0x2a, 0x12, 0x9e, 0x01, 0x0a, 0x12, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0xba, 0x43, 0x14, 0x12,
	0x12, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65,
	0x72, 0x6d, 0x65, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x83, 0x01, 0x0a, 0x11, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x44, 0x72,
	0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x65, 0x72, 0x6d, 0x65, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29,
	0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_hermes_proto_rawDescOnce sync.Once
	file_api_hermes_proto_rawDescData = file_api_hermes_proto_rawDesc
)

func file_api_hermes_proto_rawDescGZIP() []byte {
	file_api_hermes_proto_rawDescOnce.Do(func() {
		file_api_hermes_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_hermes_proto_rawDescData)
	})
	return file_api_hermes_proto_rawDescData
}

var file_api_hermes_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_hermes_proto_goTypes = []interface{}{
	(*HermesRequest)(nil),                              // 0: api.HermesRequest
	(*RewardDistribution)(nil),                         // 1: api.RewardDistribution
	(*HermesDistribution)(nil),                         // 2: api.HermesDistribution
	(*HermesResponse)(nil),                             // 3: api.HermesResponse
	(*HermesByVoterRequest)(nil),                       // 4: api.HermesByVoterRequest
	(*HermesByVoterResponse)(nil),                      // 5: api.HermesByVoterResponse
	(*HermesByDelegateRequest)(nil),                    // 6: api.HermesByDelegateRequest
	(*HermesByDelegateVoterInfo)(nil),                  // 7: api.HermesByDelegateVoterInfo
	(*HermesByDelegateDistributionRatio)(nil),          // 8: api.HermesByDelegateDistributionRatio
	(*HermesByDelegateResponse)(nil),                   // 9: api.HermesByDelegateResponse
	(*HermesMetaRequest)(nil),                          // 10: api.HermesMetaRequest
	(*HermesMetaResponse)(nil),                         // 11: api.HermesMetaResponse
	(*HermesAverageStatsRequest)(nil),                  // 12: api.HermesAverageStatsRequest
	(*HermesAverageStatsResponse)(nil),                 // 13: api.HermesAverageStatsResponse
	(*HermesDropRecordsRequest)(nil),                   // 14: api.HermesDropRecordsRequest
	(*HermesDropRecordsResponse)(nil),                  // 15: api.HermesDropRecordsResponse
	(*HermesByVoterResponse_Delegate)(nil),             // 16: api.HermesByVoterResponse.Delegate
	(*HermesAverageStatsResponse_AveragePerEpoch)(nil), // 17: api.HermesAverageStatsResponse.AveragePerEpoch
	(*pagination.Pagination)(nil),                      // 18: pagination.Pagination
}
var file_api_hermes_proto_depIdxs = []int32{
	1,  // 0: api.HermesDistribution.rewardDistribution:type_name -> api.RewardDistribution
	2,  // 1: api.HermesResponse.hermesDistribution:type_name -> api.HermesDistribution
	18, // 2: api.HermesByVoterRequest.pagination:type_name -> pagination.Pagination
	16, // 3: api.HermesByVoterResponse.delegates:type_name -> api.HermesByVoterResponse.Delegate
	18, // 4: api.HermesByDelegateRequest.pagination:type_name -> pagination.Pagination
	7,  // 5: api.HermesByDelegateResponse.voterInfoList:type_name -> api.HermesByDelegateVoterInfo
	8,  // 6: api.HermesByDelegateResponse.distributionRatio:type_name -> api.HermesByDelegateDistributionRatio
	17, // 7: api.HermesAverageStatsResponse.averagePerEpoch:type_name -> api.HermesAverageStatsResponse.AveragePerEpoch
	0,  // 8: api.HermesService.Hermes:input_type -> api.HermesRequest
	4,  // 9: api.HermesService.HermesByVoter:input_type -> api.HermesByVoterRequest
	6,  // 10: api.HermesService.HermesByDelegate:input_type -> api.HermesByDelegateRequest
	10, // 11: api.HermesService.HermesMeta:input_type -> api.HermesMetaRequest
	12, // 12: api.HermesService.HermesAverageStats:input_type -> api.HermesAverageStatsRequest
	14, // 13: api.HermesService.HermesDropRecords:input_type -> api.HermesDropRecordsRequest
	3,  // 14: api.HermesService.Hermes:output_type -> api.HermesResponse
	5,  // 15: api.HermesService.HermesByVoter:output_type -> api.HermesByVoterResponse
	9,  // 16: api.HermesService.HermesByDelegate:output_type -> api.HermesByDelegateResponse
	11, // 17: api.HermesService.HermesMeta:output_type -> api.HermesMetaResponse
	13, // 18: api.HermesService.HermesAverageStats:output_type -> api.HermesAverageStatsResponse
	15, // 19: api.HermesService.HermesDropRecords:output_type -> api.HermesDropRecordsResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_hermes_proto_init() }
func file_api_hermes_proto_init() {
	if File_api_hermes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_hermes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesByVoterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesByVoterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesByDelegateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesByDelegateVoterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesByDelegateDistributionRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesByDelegateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesAverageStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesAverageStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesDropRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesDropRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesByVoterResponse_Delegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_hermes_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesAverageStatsResponse_AveragePerEpoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_hermes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_hermes_proto_goTypes,
		DependencyIndexes: file_api_hermes_proto_depIdxs,
		MessageInfos:      file_api_hermes_proto_msgTypes,
	}.Build()
	File_api_hermes_proto = out.File
	file_api_hermes_proto_rawDesc = nil
	file_api_hermes_proto_goTypes = nil
	file_api_hermes_proto_depIdxs = nil
}
