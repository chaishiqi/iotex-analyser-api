// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: api_delegate.proto

package api

import (
	pagination "github.com/iotexproject/iotex-analyser-api/api/pagination"
	_ "github.com/ysugimoto/grpc-graphql-gateway/graphql"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BucketInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpoch   uint64                 `protobuf:"varint,1,opt,name=startEpoch,proto3" json:"startEpoch,omitempty"`    // Epoch number to start from
	EpochCount   uint64                 `protobuf:"varint,2,opt,name=epochCount,proto3" json:"epochCount,omitempty"`    // Number of epochs to query
	DelegateName string                 `protobuf:"bytes,3,opt,name=delegateName,proto3" json:"delegateName,omitempty"` // Name of the delegate
	Pagination   *pagination.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`     //Pagination info
}

func (x *BucketInfoRequest) Reset() {
	*x = BucketInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketInfoRequest) ProtoMessage() {}

func (x *BucketInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketInfoRequest.ProtoReflect.Descriptor instead.
func (*BucketInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{0}
}

func (x *BucketInfoRequest) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *BucketInfoRequest) GetEpochCount() uint64 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

func (x *BucketInfoRequest) GetDelegateName() string {
	if x != nil {
		return x.DelegateName
	}
	return ""
}

func (x *BucketInfoRequest) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type BucketInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist          bool              `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"` // whether the delegate has voting bucket information within the specified epoch range
	Count          uint64            `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // total number of buckets in the given epoch for the given delegate
	BucketInfoList []*BucketInfoList `protobuf:"bytes,3,rep,name=bucketInfoList,proto3" json:"bucketInfoList,omitempty"`
}

func (x *BucketInfoResponse) Reset() {
	*x = BucketInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketInfoResponse) ProtoMessage() {}

func (x *BucketInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketInfoResponse.ProtoReflect.Descriptor instead.
func (*BucketInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{1}
}

func (x *BucketInfoResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *BucketInfoResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BucketInfoResponse) GetBucketInfoList() []*BucketInfoList {
	if x != nil {
		return x.BucketInfoList
	}
	return nil
}

type BucketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoterEthAddress   string `protobuf:"bytes,1,opt,name=voterEthAddress,proto3" json:"voterEthAddress,omitempty"`     // voter’s ERC20 address
	VoterIotexAddress string `protobuf:"bytes,2,opt,name=voterIotexAddress,proto3" json:"voterIotexAddress,omitempty"` // voter's IoTeX address
	IsNative          bool   `protobuf:"varint,3,opt,name=isNative,proto3" json:"isNative,omitempty"`                  // whether the bucket is native
	Votes             string `protobuf:"bytes,4,opt,name=votes,proto3" json:"votes,omitempty"`                         // voter's votes
	WeightedVotes     string `protobuf:"bytes,5,opt,name=weightedVotes,proto3" json:"weightedVotes,omitempty"`         // voter’s weighted votes
	RemainingDuration string `protobuf:"bytes,6,opt,name=remainingDuration,proto3" json:"remainingDuration,omitempty"` // bucket remaining duration
	StartTime         string `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime,omitempty"`                 // bucket start time
	Decay             bool   `protobuf:"varint,8,opt,name=decay,proto3" json:"decay,omitempty"`                        // whether the vote weight decays
	BucketID          uint64 `protobuf:"varint,9,opt,name=bucketID,proto3" json:"bucketID,omitempty"`                  // bucket id
}

func (x *BucketInfo) Reset() {
	*x = BucketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketInfo) ProtoMessage() {}

func (x *BucketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketInfo.ProtoReflect.Descriptor instead.
func (*BucketInfo) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{2}
}

func (x *BucketInfo) GetVoterEthAddress() string {
	if x != nil {
		return x.VoterEthAddress
	}
	return ""
}

func (x *BucketInfo) GetVoterIotexAddress() string {
	if x != nil {
		return x.VoterIotexAddress
	}
	return ""
}

func (x *BucketInfo) GetIsNative() bool {
	if x != nil {
		return x.IsNative
	}
	return false
}

func (x *BucketInfo) GetVotes() string {
	if x != nil {
		return x.Votes
	}
	return ""
}

func (x *BucketInfo) GetWeightedVotes() string {
	if x != nil {
		return x.WeightedVotes
	}
	return ""
}

func (x *BucketInfo) GetRemainingDuration() string {
	if x != nil {
		return x.RemainingDuration
	}
	return ""
}

func (x *BucketInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *BucketInfo) GetDecay() bool {
	if x != nil {
		return x.Decay
	}
	return false
}

func (x *BucketInfo) GetBucketID() uint64 {
	if x != nil {
		return x.BucketID
	}
	return 0
}

type BucketInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNumber uint64        `protobuf:"varint,1,opt,name=epochNumber,proto3" json:"epochNumber,omitempty"` // epoch number
	Count       uint64        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`             //total number of buckets in the given epoch for the given delegate
	BucketInfo  []*BucketInfo `protobuf:"bytes,3,rep,name=bucketInfo,proto3" json:"bucketInfo,omitempty"`
}

func (x *BucketInfoList) Reset() {
	*x = BucketInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketInfoList) ProtoMessage() {}

func (x *BucketInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketInfoList.ProtoReflect.Descriptor instead.
func (*BucketInfoList) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{3}
}

func (x *BucketInfoList) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

func (x *BucketInfoList) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BucketInfoList) GetBucketInfo() []*BucketInfo {
	if x != nil {
		return x.BucketInfo
	}
	return nil
}

type BookKeepingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpoch          uint64                 `protobuf:"varint,1,opt,name=startEpoch,proto3" json:"startEpoch,omitempty"`                   // epoch number to start from
	EpochCount          uint64                 `protobuf:"varint,2,opt,name=epochCount,proto3" json:"epochCount,omitempty"`                   // number of epochs to query
	DelegateName        string                 `protobuf:"bytes,3,opt,name=delegateName,proto3" json:"delegateName,omitempty"`                // name of the delegate
	Pagination          *pagination.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`                    //Pagination info
	EpochRewardPerc     uint64                 `protobuf:"varint,5,opt,name=epochRewardPerc,proto3" json:"epochRewardPerc,omitempty"`         // percentage of the epoch reward to be paid to the delegate
	BlockRewardPerc     uint64                 `protobuf:"varint,6,opt,name=blockRewardPerc,proto3" json:"blockRewardPerc,omitempty"`         // percentage of the block reward to be paid to the delegate
	FoundationBonusPerc uint64                 `protobuf:"varint,7,opt,name=foundationBonusPerc,proto3" json:"foundationBonusPerc,omitempty"` // percentage of the foundation bonus to be paid to the delegate
}

func (x *BookKeepingRequest) Reset() {
	*x = BookKeepingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookKeepingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookKeepingRequest) ProtoMessage() {}

func (x *BookKeepingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookKeepingRequest.ProtoReflect.Descriptor instead.
func (*BookKeepingRequest) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{4}
}

func (x *BookKeepingRequest) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *BookKeepingRequest) GetEpochCount() uint64 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

func (x *BookKeepingRequest) GetDelegateName() string {
	if x != nil {
		return x.DelegateName
	}
	return ""
}

func (x *BookKeepingRequest) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *BookKeepingRequest) GetEpochRewardPerc() uint64 {
	if x != nil {
		return x.EpochRewardPerc
	}
	return 0
}

func (x *BookKeepingRequest) GetBlockRewardPerc() uint64 {
	if x != nil {
		return x.BlockRewardPerc
	}
	return 0
}

func (x *BookKeepingRequest) GetFoundationBonusPerc() uint64 {
	if x != nil {
		return x.FoundationBonusPerc
	}
	return 0
}

type BookKeepingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist              bool                          `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"` // whether the delegate has bookkeeping information within the specified epoch range
	Count              uint64                        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // total number of reward distributions
	RewardDistribution []*DelegateRewardDistribution `protobuf:"bytes,3,rep,name=rewardDistribution,proto3" json:"rewardDistribution,omitempty"`
}

func (x *BookKeepingResponse) Reset() {
	*x = BookKeepingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookKeepingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookKeepingResponse) ProtoMessage() {}

func (x *BookKeepingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookKeepingResponse.ProtoReflect.Descriptor instead.
func (*BookKeepingResponse) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{5}
}

func (x *BookKeepingResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *BookKeepingResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BookKeepingResponse) GetRewardDistribution() []*DelegateRewardDistribution {
	if x != nil {
		return x.RewardDistribution
	}
	return nil
}

type DelegateRewardDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoterEthAddress   string `protobuf:"bytes,1,opt,name=voterEthAddress,proto3" json:"voterEthAddress,omitempty"`     // voter’s ERC20 address
	VoterIotexAddress string `protobuf:"bytes,2,opt,name=voterIotexAddress,proto3" json:"voterIotexAddress,omitempty"` // voter’s IoTeX address
	Amount            string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`                       // amount of reward distribution
}

func (x *DelegateRewardDistribution) Reset() {
	*x = DelegateRewardDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegateRewardDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegateRewardDistribution) ProtoMessage() {}

func (x *DelegateRewardDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegateRewardDistribution.ProtoReflect.Descriptor instead.
func (*DelegateRewardDistribution) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{6}
}

func (x *DelegateRewardDistribution) GetVoterEthAddress() string {
	if x != nil {
		return x.VoterEthAddress
	}
	return ""
}

func (x *DelegateRewardDistribution) GetVoterIotexAddress() string {
	if x != nil {
		return x.VoterIotexAddress
	}
	return ""
}

func (x *DelegateRewardDistribution) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type Productivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist              bool   `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`                           // whether the delegate has productivity information within the specified epoch range
	Production         uint64 `protobuf:"varint,2,opt,name=production,proto3" json:"production,omitempty"`                 // number of block productions
	ExpectedProduction uint64 `protobuf:"varint,3,opt,name=expectedProduction,proto3" json:"expectedProduction,omitempty"` // number of expected block productions
}

func (x *Productivity) Reset() {
	*x = Productivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Productivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Productivity) ProtoMessage() {}

func (x *Productivity) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Productivity.ProtoReflect.Descriptor instead.
func (*Productivity) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{7}
}

func (x *Productivity) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *Productivity) GetProduction() uint64 {
	if x != nil {
		return x.Production
	}
	return 0
}

func (x *Productivity) GetExpectedProduction() uint64 {
	if x != nil {
		return x.ExpectedProduction
	}
	return 0
}

type ProductivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpoch   uint64 `protobuf:"varint,1,opt,name=startEpoch,proto3" json:"startEpoch,omitempty"`    // starting epoch number
	EpochCount   uint64 `protobuf:"varint,2,opt,name=epochCount,proto3" json:"epochCount,omitempty"`    // epoch count
	DelegateName string `protobuf:"bytes,3,opt,name=delegateName,proto3" json:"delegateName,omitempty"` // producer name
}

func (x *ProductivityRequest) Reset() {
	*x = ProductivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductivityRequest) ProtoMessage() {}

func (x *ProductivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductivityRequest.ProtoReflect.Descriptor instead.
func (*ProductivityRequest) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{8}
}

func (x *ProductivityRequest) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *ProductivityRequest) GetEpochCount() uint64 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

func (x *ProductivityRequest) GetDelegateName() string {
	if x != nil {
		return x.DelegateName
	}
	return ""
}

type ProductivityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Productivity *Productivity `protobuf:"bytes,1,opt,name=productivity,proto3" json:"productivity,omitempty"`
}

func (x *ProductivityResponse) Reset() {
	*x = ProductivityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductivityResponse) ProtoMessage() {}

func (x *ProductivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductivityResponse.ProtoReflect.Descriptor instead.
func (*ProductivityResponse) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{9}
}

func (x *ProductivityResponse) GetProductivity() *Productivity {
	if x != nil {
		return x.Productivity
	}
	return nil
}

type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockReward     string `protobuf:"bytes,1,opt,name=blockReward,proto3" json:"blockReward,omitempty"`         // amount of block rewards
	EpochReward     string `protobuf:"bytes,2,opt,name=epochReward,proto3" json:"epochReward,omitempty"`         // amount of epoch rewards
	FoundationBonus string `protobuf:"bytes,3,opt,name=foundationBonus,proto3" json:"foundationBonus,omitempty"` // amount of foundation bonus
	Exist           bool   `protobuf:"varint,4,opt,name=exist,proto3" json:"exist,omitempty"`                    // whether the delegate has reward information within the specified epoch range
}

func (x *Reward) Reset() {
	*x = Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{10}
}

func (x *Reward) GetBlockReward() string {
	if x != nil {
		return x.BlockReward
	}
	return ""
}

func (x *Reward) GetEpochReward() string {
	if x != nil {
		return x.EpochReward
	}
	return ""
}

func (x *Reward) GetFoundationBonus() string {
	if x != nil {
		return x.FoundationBonus
	}
	return ""
}

func (x *Reward) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type RewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpoch   uint64 `protobuf:"varint,1,opt,name=startEpoch,proto3" json:"startEpoch,omitempty"`    // Epoch number to start from
	EpochCount   uint64 `protobuf:"varint,2,opt,name=epochCount,proto3" json:"epochCount,omitempty"`    // Number of epochs to query
	DelegateName string `protobuf:"bytes,3,opt,name=delegateName,proto3" json:"delegateName,omitempty"` // Name of the delegate
}

func (x *RewardRequest) Reset() {
	*x = RewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardRequest) ProtoMessage() {}

func (x *RewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardRequest.ProtoReflect.Descriptor instead.
func (*RewardRequest) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{11}
}

func (x *RewardRequest) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *RewardRequest) GetEpochCount() uint64 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

func (x *RewardRequest) GetDelegateName() string {
	if x != nil {
		return x.DelegateName
	}
	return ""
}

type RewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward *Reward `protobuf:"bytes,1,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *RewardResponse) Reset() {
	*x = RewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardResponse) ProtoMessage() {}

func (x *RewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardResponse.ProtoReflect.Descriptor instead.
func (*RewardResponse) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{12}
}

func (x *RewardResponse) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

type StakingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpoch   uint64 `protobuf:"varint,1,opt,name=startEpoch,proto3" json:"startEpoch,omitempty"`    // starting epoch number
	EpochCount   uint64 `protobuf:"varint,2,opt,name=epochCount,proto3" json:"epochCount,omitempty"`    // epoch count
	DelegateName string `protobuf:"bytes,3,opt,name=delegateName,proto3" json:"delegateName,omitempty"` // candidate name
}

func (x *StakingRequest) Reset() {
	*x = StakingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakingRequest) ProtoMessage() {}

func (x *StakingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakingRequest.ProtoReflect.Descriptor instead.
func (*StakingRequest) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{13}
}

func (x *StakingRequest) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *StakingRequest) GetEpochCount() uint64 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

func (x *StakingRequest) GetDelegateName() string {
	if x != nil {
		return x.DelegateName
	}
	return ""
}

type StakingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist       bool                           `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"` // whether the delegate has staking information within the specified epoch range
	StakingInfo []*StakingResponse_StakingInfo `protobuf:"bytes,2,rep,name=stakingInfo,proto3" json:"stakingInfo,omitempty"`
}

func (x *StakingResponse) Reset() {
	*x = StakingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakingResponse) ProtoMessage() {}

func (x *StakingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakingResponse.ProtoReflect.Descriptor instead.
func (*StakingResponse) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{14}
}

func (x *StakingResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *StakingResponse) GetStakingInfo() []*StakingResponse_StakingInfo {
	if x != nil {
		return x.StakingInfo
	}
	return nil
}

type ProbationHistoricalRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpoch   uint64 `protobuf:"varint,1,opt,name=startEpoch,proto3" json:"startEpoch,omitempty"`    // starting epoch number
	EpochCount   uint64 `protobuf:"varint,2,opt,name=epochCount,proto3" json:"epochCount,omitempty"`    // epoch count
	DelegateName string `protobuf:"bytes,3,opt,name=delegateName,proto3" json:"delegateName,omitempty"` // candidate name
}

func (x *ProbationHistoricalRateRequest) Reset() {
	*x = ProbationHistoricalRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbationHistoricalRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbationHistoricalRateRequest) ProtoMessage() {}

func (x *ProbationHistoricalRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbationHistoricalRateRequest.ProtoReflect.Descriptor instead.
func (*ProbationHistoricalRateRequest) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{15}
}

func (x *ProbationHistoricalRateRequest) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *ProbationHistoricalRateRequest) GetEpochCount() uint64 {
	if x != nil {
		return x.EpochCount
	}
	return 0
}

func (x *ProbationHistoricalRateRequest) GetDelegateName() string {
	if x != nil {
		return x.DelegateName
	}
	return ""
}

type ProbationHistoricalRateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProbationHistoricalRate string `protobuf:"bytes,1,opt,name=probationHistoricalRate,proto3" json:"probationHistoricalRate,omitempty"` // probation historical rate
}

func (x *ProbationHistoricalRateResponse) Reset() {
	*x = ProbationHistoricalRateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbationHistoricalRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbationHistoricalRateResponse) ProtoMessage() {}

func (x *ProbationHistoricalRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbationHistoricalRateResponse.ProtoReflect.Descriptor instead.
func (*ProbationHistoricalRateResponse) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{16}
}

func (x *ProbationHistoricalRateResponse) GetProbationHistoricalRate() string {
	if x != nil {
		return x.ProbationHistoricalRate
	}
	return ""
}

type StakingResponse_StakingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNumber  uint64 `protobuf:"varint,1,opt,name=epochNumber,proto3" json:"epochNumber,omitempty"`  //epoch number
	TotalStaking string `protobuf:"bytes,2,opt,name=totalStaking,proto3" json:"totalStaking,omitempty"` // total staking amount
	SelfStaking  string `protobuf:"bytes,3,opt,name=selfStaking,proto3" json:"selfStaking,omitempty"`   // candidate’s self-staking amount
}

func (x *StakingResponse_StakingInfo) Reset() {
	*x = StakingResponse_StakingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_delegate_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakingResponse_StakingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakingResponse_StakingInfo) ProtoMessage() {}

func (x *StakingResponse_StakingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_delegate_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakingResponse_StakingInfo.ProtoReflect.Descriptor instead.
func (*StakingResponse_StakingInfo) Descriptor() ([]byte, []int) {
	return file_api_delegate_proto_rawDescGZIP(), []int{14, 0}
}

func (x *StakingResponse_StakingInfo) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

func (x *StakingResponse_StakingInfo) GetTotalStaking() string {
	if x != nil {
		return x.TotalStaking
	}
	return ""
}

func (x *StakingResponse_StakingInfo) GetSelfStaking() string {
	if x != nil {
		return x.SelfStaking
	}
	return ""
}

var File_api_delegate_proto protoreflect.FileDescriptor

var file_api_delegate_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x01, 0x0a, 0x11, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x12, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xba, 0x02, 0x0a, 0x0a, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x6f, 0x74, 0x65, 0x78,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x49, 0x6f, 0x74, 0x65, 0x78, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x56, 0x6f,
	0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x63, 0x61, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x63, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x22, 0x79, 0x0a, 0x0e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2f, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xb6, 0x02, 0x0a, 0x12, 0x42, 0x6f, 0x6f, 0x6b, 0x4b, 0x65, 0x65, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x63, 0x12, 0x28,
	0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72,
	0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x63, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x65, 0x72, 0x63, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x65, 0x72, 0x63, 0x22, 0x92, 0x01, 0x0a, 0x13, 0x42,
	0x6f, 0x6f, 0x6b, 0x4b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f,
	0x0a, 0x12, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x8c, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x45, 0x74,
	0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x49, 0x6f, 0x74, 0x65, 0x78, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x6f, 0x74, 0x65, 0x78, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x74,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x4d, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x8c,
	0x01, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x22, 0x73, 0x0a,
	0x0d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x35, 0x0a, 0x0e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x74, 0x0a, 0x0e, 0x53, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xe2, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x75, 0x0a,
	0x0b, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x53, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x22, 0x84, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x1f, 0x50,
	0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x17, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x32, 0x9c, 0x06, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78, 0x0a, 0x0a,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0xba, 0x43, 0x0c,
	0x12, 0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x3a, 0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x4b, 0x65,
	0x65, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x4b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0xba, 0x43, 0x0d, 0x12, 0x0b, 0x42,
	0x6f, 0x6f, 0x6b, 0x4b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4b, 0x65, 0x65, 0x70, 0x69,
	0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0xba, 0x43, 0x0e,
	0x12, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a, 0x06, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xba,
	0x43, 0x08, 0x12, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x3a, 0x01, 0x2a,
	0x12, 0x69, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0xba, 0x43, 0x09, 0x12, 0x07, 0x53, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xb9, 0x01, 0x0a, 0x17,
	0x50, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x53, 0xba, 0x43, 0x19, 0x12, 0x17, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_delegate_proto_rawDescOnce sync.Once
	file_api_delegate_proto_rawDescData = file_api_delegate_proto_rawDesc
)

func file_api_delegate_proto_rawDescGZIP() []byte {
	file_api_delegate_proto_rawDescOnce.Do(func() {
		file_api_delegate_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_delegate_proto_rawDescData)
	})
	return file_api_delegate_proto_rawDescData
}

var file_api_delegate_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_delegate_proto_goTypes = []interface{}{
	(*BucketInfoRequest)(nil),               // 0: api.BucketInfoRequest
	(*BucketInfoResponse)(nil),              // 1: api.BucketInfoResponse
	(*BucketInfo)(nil),                      // 2: api.BucketInfo
	(*BucketInfoList)(nil),                  // 3: api.BucketInfoList
	(*BookKeepingRequest)(nil),              // 4: api.BookKeepingRequest
	(*BookKeepingResponse)(nil),             // 5: api.BookKeepingResponse
	(*DelegateRewardDistribution)(nil),      // 6: api.DelegateRewardDistribution
	(*Productivity)(nil),                    // 7: api.Productivity
	(*ProductivityRequest)(nil),             // 8: api.ProductivityRequest
	(*ProductivityResponse)(nil),            // 9: api.ProductivityResponse
	(*Reward)(nil),                          // 10: api.Reward
	(*RewardRequest)(nil),                   // 11: api.RewardRequest
	(*RewardResponse)(nil),                  // 12: api.RewardResponse
	(*StakingRequest)(nil),                  // 13: api.StakingRequest
	(*StakingResponse)(nil),                 // 14: api.StakingResponse
	(*ProbationHistoricalRateRequest)(nil),  // 15: api.ProbationHistoricalRateRequest
	(*ProbationHistoricalRateResponse)(nil), // 16: api.ProbationHistoricalRateResponse
	(*StakingResponse_StakingInfo)(nil),     // 17: api.StakingResponse.StakingInfo
	(*pagination.Pagination)(nil),           // 18: pagination.Pagination
}
var file_api_delegate_proto_depIdxs = []int32{
	18, // 0: api.BucketInfoRequest.pagination:type_name -> pagination.Pagination
	3,  // 1: api.BucketInfoResponse.bucketInfoList:type_name -> api.BucketInfoList
	2,  // 2: api.BucketInfoList.bucketInfo:type_name -> api.BucketInfo
	18, // 3: api.BookKeepingRequest.pagination:type_name -> pagination.Pagination
	6,  // 4: api.BookKeepingResponse.rewardDistribution:type_name -> api.DelegateRewardDistribution
	7,  // 5: api.ProductivityResponse.productivity:type_name -> api.Productivity
	10, // 6: api.RewardResponse.reward:type_name -> api.Reward
	17, // 7: api.StakingResponse.stakingInfo:type_name -> api.StakingResponse.StakingInfo
	0,  // 8: api.DelegateService.BucketInfo:input_type -> api.BucketInfoRequest
	4,  // 9: api.DelegateService.BookKeeping:input_type -> api.BookKeepingRequest
	8,  // 10: api.DelegateService.Productivity:input_type -> api.ProductivityRequest
	11, // 11: api.DelegateService.Reward:input_type -> api.RewardRequest
	13, // 12: api.DelegateService.Staking:input_type -> api.StakingRequest
	15, // 13: api.DelegateService.ProbationHistoricalRate:input_type -> api.ProbationHistoricalRateRequest
	1,  // 14: api.DelegateService.BucketInfo:output_type -> api.BucketInfoResponse
	5,  // 15: api.DelegateService.BookKeeping:output_type -> api.BookKeepingResponse
	9,  // 16: api.DelegateService.Productivity:output_type -> api.ProductivityResponse
	12, // 17: api.DelegateService.Reward:output_type -> api.RewardResponse
	14, // 18: api.DelegateService.Staking:output_type -> api.StakingResponse
	16, // 19: api.DelegateService.ProbationHistoricalRate:output_type -> api.ProbationHistoricalRateResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_delegate_proto_init() }
func file_api_delegate_proto_init() {
	if File_api_delegate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_delegate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookKeepingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookKeepingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegateRewardDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Productivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductivityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbationHistoricalRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbationHistoricalRateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_delegate_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakingResponse_StakingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_delegate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_delegate_proto_goTypes,
		DependencyIndexes: file_api_delegate_proto_depIdxs,
		MessageInfos:      file_api_delegate_proto_msgTypes,
	}.Build()
	File_api_delegate_proto = out.File
	file_api_delegate_proto_rawDesc = nil
	file_api_delegate_proto_goTypes = nil
	file_api_delegate_proto_depIdxs = nil
}
