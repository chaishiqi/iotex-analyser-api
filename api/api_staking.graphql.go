// Code generated by proroc-gen-graphql, DO NOT EDIT.
package api

import (
	"github.com/graphql-go/graphql"
)

var (
	gql__type_StakingResponse  *graphql.Object      // message StakingResponse in api_staking.proto
	gql__type_StakingRequest   *graphql.Object      // message StakingRequest in api_staking.proto
	gql__input_StakingResponse *graphql.InputObject // message StakingResponse in api_staking.proto
	gql__input_StakingRequest  *graphql.InputObject // message StakingRequest in api_staking.proto
)

func Gql__type_StakingResponse() *graphql.Object {
	if gql__type_StakingResponse == nil {
		gql__type_StakingResponse = graphql.NewObject(graphql.ObjectConfig{
			Name: "Api_Type_StakingResponse",
			Fields: graphql.Fields{
				"height": &graphql.Field{
					Type: graphql.Int,
				},
				"stakeAmount": &graphql.Field{
					Type: graphql.NewList(graphql.String),
				},
				"voteWeight": &graphql.Field{
					Type: graphql.NewList(graphql.String),
				},
				"address": &graphql.Field{
					Type: graphql.NewList(graphql.String),
				},
			},
		})
	}
	return gql__type_StakingResponse
}

func Gql__type_StakingRequest() *graphql.Object {
	if gql__type_StakingRequest == nil {
		gql__type_StakingRequest = graphql.NewObject(graphql.ObjectConfig{
			Name: "Api_Type_StakingRequest",
			Fields: graphql.Fields{
				"address": &graphql.Field{
					Type: graphql.NewList(graphql.String),
				},
				"height": &graphql.Field{
					Type: graphql.Int,
				},
			},
		})
	}
	return gql__type_StakingRequest
}

func Gql__input_StakingResponse() *graphql.InputObject {
	if gql__input_StakingResponse == nil {
		gql__input_StakingResponse = graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "Api_Input_StakingResponse",
			Fields: graphql.InputObjectConfigFieldMap{
				"height": &graphql.InputObjectFieldConfig{
					Type: graphql.Int,
				},
				"stakeAmount": &graphql.InputObjectFieldConfig{
					Type: graphql.NewList(graphql.String),
				},
				"voteWeight": &graphql.InputObjectFieldConfig{
					Type: graphql.NewList(graphql.String),
				},
				"address": &graphql.InputObjectFieldConfig{
					Type: graphql.NewList(graphql.String),
				},
			},
		})
	}
	return gql__input_StakingResponse
}

func Gql__input_StakingRequest() *graphql.InputObject {
	if gql__input_StakingRequest == nil {
		gql__input_StakingRequest = graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "Api_Input_StakingRequest",
			Fields: graphql.InputObjectConfigFieldMap{
				"address": &graphql.InputObjectFieldConfig{
					Type: graphql.NewList(graphql.String),
				},
				"height": &graphql.InputObjectFieldConfig{
					Type: graphql.Int,
				},
			},
		})
	}
	return gql__input_StakingRequest
}
