// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.17.3
// source: api_xrc721.proto

package api

import (
	pagination "github.com/iotexproject/iotex-analyser-api/api/pagination"
	_ "github.com/ysugimoto/grpc-graphql-gateway/graphql"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Xrc721Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActHash   string `protobuf:"bytes,1,opt,name=actHash,proto3" json:"actHash,omitempty"`      // action hash
	Sender    string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`        // sender address
	Recipient string `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`  // recipient address
	Amount    string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`        // amount transferred
	Timestamp uint64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // unix timestamp
	Contract  string `protobuf:"bytes,6,opt,name=contract,proto3" json:"contract,omitempty"`    // contract address
}

func (x *Xrc721Action) Reset() {
	*x = Xrc721Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_xrc721_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Xrc721Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Xrc721Action) ProtoMessage() {}

func (x *Xrc721Action) ProtoReflect() protoreflect.Message {
	mi := &file_api_xrc721_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Xrc721Action.ProtoReflect.Descriptor instead.
func (*Xrc721Action) Descriptor() ([]byte, []int) {
	return file_api_xrc721_proto_rawDescGZIP(), []int{0}
}

func (x *Xrc721Action) GetActHash() string {
	if x != nil {
		return x.ActHash
	}
	return ""
}

func (x *Xrc721Action) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Xrc721Action) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *Xrc721Action) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Xrc721Action) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Xrc721Action) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type XRC721ByAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // sender address or recipient address
	Pagination *pagination.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *XRC721ByAddressRequest) Reset() {
	*x = XRC721ByAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_xrc721_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRC721ByAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRC721ByAddressRequest) ProtoMessage() {}

func (x *XRC721ByAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_xrc721_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRC721ByAddressRequest.ProtoReflect.Descriptor instead.
func (*XRC721ByAddressRequest) Descriptor() ([]byte, []int) {
	return file_api_xrc721_proto_rawDescGZIP(), []int{1}
}

func (x *XRC721ByAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *XRC721ByAddressRequest) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type XRC721ByAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist  bool            `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"` // whether Xrc721 actions exist for the given sender address or recipient address
	Count  uint64          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // total number of Xrc721 actions
	Xrc721 []*Xrc721Action `protobuf:"bytes,3,rep,name=xrc721,proto3" json:"xrc721,omitempty"`
}

func (x *XRC721ByAddressResponse) Reset() {
	*x = XRC721ByAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_xrc721_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRC721ByAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRC721ByAddressResponse) ProtoMessage() {}

func (x *XRC721ByAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_xrc721_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRC721ByAddressResponse.ProtoReflect.Descriptor instead.
func (*XRC721ByAddressResponse) Descriptor() ([]byte, []int) {
	return file_api_xrc721_proto_rawDescGZIP(), []int{2}
}

func (x *XRC721ByAddressResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *XRC721ByAddressResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *XRC721ByAddressResponse) GetXrc721() []*Xrc721Action {
	if x != nil {
		return x.Xrc721
	}
	return nil
}

type XRC721ByContractAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // contract address
	Pagination *pagination.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *XRC721ByContractAddressRequest) Reset() {
	*x = XRC721ByContractAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_xrc721_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRC721ByContractAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRC721ByContractAddressRequest) ProtoMessage() {}

func (x *XRC721ByContractAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_xrc721_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRC721ByContractAddressRequest.ProtoReflect.Descriptor instead.
func (*XRC721ByContractAddressRequest) Descriptor() ([]byte, []int) {
	return file_api_xrc721_proto_rawDescGZIP(), []int{3}
}

func (x *XRC721ByContractAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *XRC721ByContractAddressRequest) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type XRC721ByContractAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist  bool            `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"` // whether Xrc721 actions exist for the given contract address
	Count  uint64          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // total number of Xrc721 actions
	Xrc721 []*Xrc721Action `protobuf:"bytes,3,rep,name=xrc721,proto3" json:"xrc721,omitempty"`
}

func (x *XRC721ByContractAddressResponse) Reset() {
	*x = XRC721ByContractAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_xrc721_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRC721ByContractAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRC721ByContractAddressResponse) ProtoMessage() {}

func (x *XRC721ByContractAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_xrc721_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRC721ByContractAddressResponse.ProtoReflect.Descriptor instead.
func (*XRC721ByContractAddressResponse) Descriptor() ([]byte, []int) {
	return file_api_xrc721_proto_rawDescGZIP(), []int{4}
}

func (x *XRC721ByContractAddressResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *XRC721ByContractAddressResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *XRC721ByContractAddressResponse) GetXrc721() []*Xrc721Action {
	if x != nil {
		return x.Xrc721
	}
	return nil
}

type XRC721ByPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *pagination.Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *XRC721ByPageRequest) Reset() {
	*x = XRC721ByPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_xrc721_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRC721ByPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRC721ByPageRequest) ProtoMessage() {}

func (x *XRC721ByPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_xrc721_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRC721ByPageRequest.ProtoReflect.Descriptor instead.
func (*XRC721ByPageRequest) Descriptor() ([]byte, []int) {
	return file_api_xrc721_proto_rawDescGZIP(), []int{5}
}

func (x *XRC721ByPageRequest) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type XRC721ByPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist  bool            `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"` // whether Xrc721 actions exist for the given contract address
	Count  uint64          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // total number of Xrc721 actions
	Xrc721 []*Xrc721Action `protobuf:"bytes,3,rep,name=xrc721,proto3" json:"xrc721,omitempty"`
}

func (x *XRC721ByPageResponse) Reset() {
	*x = XRC721ByPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_xrc721_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRC721ByPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRC721ByPageResponse) ProtoMessage() {}

func (x *XRC721ByPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_xrc721_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRC721ByPageResponse.ProtoReflect.Descriptor instead.
func (*XRC721ByPageResponse) Descriptor() ([]byte, []int) {
	return file_api_xrc721_proto_rawDescGZIP(), []int{6}
}

func (x *XRC721ByPageResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *XRC721ByPageResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *XRC721ByPageResponse) GetXrc721() []*Xrc721Action {
	if x != nil {
		return x.Xrc721
	}
	return nil
}

type XRC721AddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *pagination.Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *XRC721AddressesRequest) Reset() {
	*x = XRC721AddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_xrc721_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRC721AddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRC721AddressesRequest) ProtoMessage() {}

func (x *XRC721AddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_xrc721_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRC721AddressesRequest.ProtoReflect.Descriptor instead.
func (*XRC721AddressesRequest) Descriptor() ([]byte, []int) {
	return file_api_xrc721_proto_rawDescGZIP(), []int{7}
}

func (x *XRC721AddressesRequest) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type XRC721AddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist     bool     `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"` // whether Xrc721 contract addresses exist
	Count     uint64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // total number of Xrc721 contract addresses
	Addresses []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *XRC721AddressesResponse) Reset() {
	*x = XRC721AddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_xrc721_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRC721AddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRC721AddressesResponse) ProtoMessage() {}

func (x *XRC721AddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_xrc721_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRC721AddressesResponse.ProtoReflect.Descriptor instead.
func (*XRC721AddressesResponse) Descriptor() ([]byte, []int) {
	return file_api_xrc721_proto_rawDescGZIP(), []int{8}
}

func (x *XRC721AddressesResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *XRC721AddressesResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *XRC721AddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type XRC721TokenHolderAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAddress string                 `protobuf:"bytes,1,opt,name=tokenAddress,proto3" json:"tokenAddress,omitempty"` // token contract address
	Pagination   *pagination.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *XRC721TokenHolderAddressesRequest) Reset() {
	*x = XRC721TokenHolderAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_xrc721_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRC721TokenHolderAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRC721TokenHolderAddressesRequest) ProtoMessage() {}

func (x *XRC721TokenHolderAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_xrc721_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRC721TokenHolderAddressesRequest.ProtoReflect.Descriptor instead.
func (*XRC721TokenHolderAddressesRequest) Descriptor() ([]byte, []int) {
	return file_api_xrc721_proto_rawDescGZIP(), []int{9}
}

func (x *XRC721TokenHolderAddressesRequest) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *XRC721TokenHolderAddressesRequest) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type XRC721TokenHolderAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     uint64   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"` // total number of token holder addresses
	Addresses []string `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *XRC721TokenHolderAddressesResponse) Reset() {
	*x = XRC721TokenHolderAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_xrc721_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRC721TokenHolderAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRC721TokenHolderAddressesResponse) ProtoMessage() {}

func (x *XRC721TokenHolderAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_xrc721_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRC721TokenHolderAddressesResponse.ProtoReflect.Descriptor instead.
func (*XRC721TokenHolderAddressesResponse) Descriptor() ([]byte, []int) {
	return file_api_xrc721_proto_rawDescGZIP(), []int{10}
}

func (x *XRC721TokenHolderAddressesResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *XRC721TokenHolderAddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

var File_api_xrc721_proto protoreflect.FileDescriptor

var file_api_xrc721_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x5f, 0x78, 0x72, 0x63, 0x37, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x2f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x0c, 0x58, 0x72, 0x63, 0x37, 0x32,
	0x31, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x6a, 0x0a, 0x16, 0x58, 0x52, 0x43,
	0x37, 0x32, 0x31, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x17, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x42,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x06,
	0x78, 0x72, 0x63, 0x37, 0x32, 0x31, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x58, 0x72, 0x63, 0x37, 0x32, 0x31, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x78, 0x72, 0x63, 0x37, 0x32, 0x31, 0x22, 0x72, 0x0a, 0x1e, 0x58, 0x52, 0x43, 0x37, 0x32,
	0x31, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x1f, 0x58,
	0x52, 0x43, 0x37, 0x32, 0x31, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x78, 0x72,
	0x63, 0x37, 0x32, 0x31, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x58, 0x72, 0x63, 0x37, 0x32, 0x31, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x78,
	0x72, 0x63, 0x37, 0x32, 0x31, 0x22, 0x4d, 0x0a, 0x13, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x42,
	0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x14, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x42, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x78, 0x72, 0x63, 0x37,
	0x32, 0x31, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58,
	0x72, 0x63, 0x37, 0x32, 0x31, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x78, 0x72, 0x63,
	0x37, 0x32, 0x31, 0x22, 0x50, 0x0a, 0x16, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x17, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x21, 0x58, 0x52,
	0x43, 0x37, 0x32, 0x31, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x22, 0x58,
	0x52, 0x43, 0x37, 0x32, 0x31, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x32, 0xb9, 0x06, 0x0a, 0x0d, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x0f, 0x58, 0x52, 0x43, 0x37,
	0x32, 0x31, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58,
	0x52, 0x43, 0x37, 0x32, 0x31, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0xba, 0x43, 0x11, 0x12, 0x0f, 0x58, 0x52, 0x43,
	0x37, 0x32, 0x31, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x52, 0x43, 0x37,
	0x32, 0x31, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31,
	0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xb7, 0x01, 0x0a, 0x17, 0x58, 0x52,
	0x43, 0x37, 0x32, 0x31, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x52, 0x43, 0x37,
	0x32, 0x31, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x51, 0xba, 0x43, 0x19, 0x12, 0x17, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x42, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x52,
	0x43, 0x37, 0x32, 0x31, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x58, 0x52, 0x43, 0x37,
	0x32, 0x31, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x0c, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x42, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x52, 0x43, 0x37, 0x32,
	0x31, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x42, 0x79, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0xba, 0x43, 0x0e, 0x12, 0x0c,
	0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x52, 0x43, 0x37,
	0x32, 0x31, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31,
	0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x0f, 0x58, 0x52, 0x43, 0x37, 0x32,
	0x31, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x52,
	0x43, 0x37, 0x32, 0x31, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0xba, 0x43, 0x11, 0x12, 0x0f, 0x58, 0x52, 0x43, 0x37,
	0x32, 0x31, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x52, 0x43, 0x37, 0x32,
	0x31, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0xc6, 0x01, 0x0a, 0x1a, 0x58, 0x52, 0x43,
	0x37, 0x32, 0x31, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x52,
	0x43, 0x37, 0x32, 0x31, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0xba, 0x43, 0x1c, 0x12, 0x1a, 0x58,
	0x52, 0x43, 0x37, 0x32, 0x31, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a,
	0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x58, 0x52, 0x43, 0x37, 0x32, 0x31, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_xrc721_proto_rawDescOnce sync.Once
	file_api_xrc721_proto_rawDescData = file_api_xrc721_proto_rawDesc
)

func file_api_xrc721_proto_rawDescGZIP() []byte {
	file_api_xrc721_proto_rawDescOnce.Do(func() {
		file_api_xrc721_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_xrc721_proto_rawDescData)
	})
	return file_api_xrc721_proto_rawDescData
}

var file_api_xrc721_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_xrc721_proto_goTypes = []interface{}{
	(*Xrc721Action)(nil),                       // 0: api.Xrc721Action
	(*XRC721ByAddressRequest)(nil),             // 1: api.XRC721ByAddressRequest
	(*XRC721ByAddressResponse)(nil),            // 2: api.XRC721ByAddressResponse
	(*XRC721ByContractAddressRequest)(nil),     // 3: api.XRC721ByContractAddressRequest
	(*XRC721ByContractAddressResponse)(nil),    // 4: api.XRC721ByContractAddressResponse
	(*XRC721ByPageRequest)(nil),                // 5: api.XRC721ByPageRequest
	(*XRC721ByPageResponse)(nil),               // 6: api.XRC721ByPageResponse
	(*XRC721AddressesRequest)(nil),             // 7: api.XRC721AddressesRequest
	(*XRC721AddressesResponse)(nil),            // 8: api.XRC721AddressesResponse
	(*XRC721TokenHolderAddressesRequest)(nil),  // 9: api.XRC721TokenHolderAddressesRequest
	(*XRC721TokenHolderAddressesResponse)(nil), // 10: api.XRC721TokenHolderAddressesResponse
	(*pagination.Pagination)(nil),              // 11: pagination.Pagination
}
var file_api_xrc721_proto_depIdxs = []int32{
	11, // 0: api.XRC721ByAddressRequest.pagination:type_name -> pagination.Pagination
	0,  // 1: api.XRC721ByAddressResponse.xrc721:type_name -> api.Xrc721Action
	11, // 2: api.XRC721ByContractAddressRequest.pagination:type_name -> pagination.Pagination
	0,  // 3: api.XRC721ByContractAddressResponse.xrc721:type_name -> api.Xrc721Action
	11, // 4: api.XRC721ByPageRequest.pagination:type_name -> pagination.Pagination
	0,  // 5: api.XRC721ByPageResponse.xrc721:type_name -> api.Xrc721Action
	11, // 6: api.XRC721AddressesRequest.pagination:type_name -> pagination.Pagination
	11, // 7: api.XRC721TokenHolderAddressesRequest.pagination:type_name -> pagination.Pagination
	1,  // 8: api.XRC721Service.XRC721ByAddress:input_type -> api.XRC721ByAddressRequest
	3,  // 9: api.XRC721Service.XRC721ByContractAddress:input_type -> api.XRC721ByContractAddressRequest
	5,  // 10: api.XRC721Service.XRC721ByPage:input_type -> api.XRC721ByPageRequest
	7,  // 11: api.XRC721Service.XRC721Addresses:input_type -> api.XRC721AddressesRequest
	9,  // 12: api.XRC721Service.XRC721TokenHolderAddresses:input_type -> api.XRC721TokenHolderAddressesRequest
	2,  // 13: api.XRC721Service.XRC721ByAddress:output_type -> api.XRC721ByAddressResponse
	4,  // 14: api.XRC721Service.XRC721ByContractAddress:output_type -> api.XRC721ByContractAddressResponse
	6,  // 15: api.XRC721Service.XRC721ByPage:output_type -> api.XRC721ByPageResponse
	8,  // 16: api.XRC721Service.XRC721Addresses:output_type -> api.XRC721AddressesResponse
	10, // 17: api.XRC721Service.XRC721TokenHolderAddresses:output_type -> api.XRC721TokenHolderAddressesResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_xrc721_proto_init() }
func file_api_xrc721_proto_init() {
	if File_api_xrc721_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_xrc721_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Xrc721Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_xrc721_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRC721ByAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_xrc721_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRC721ByAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_xrc721_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRC721ByContractAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_xrc721_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRC721ByContractAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_xrc721_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRC721ByPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_xrc721_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRC721ByPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_xrc721_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRC721AddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_xrc721_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRC721AddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_xrc721_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRC721TokenHolderAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_xrc721_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRC721TokenHolderAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_xrc721_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_xrc721_proto_goTypes,
		DependencyIndexes: file_api_xrc721_proto_depIdxs,
		MessageInfos:      file_api_xrc721_proto_msgTypes,
	}.Build()
	File_api_xrc721_proto = out.File
	file_api_xrc721_proto_rawDesc = nil
	file_api_xrc721_proto_goTypes = nil
	file_api_xrc721_proto_depIdxs = nil
}
